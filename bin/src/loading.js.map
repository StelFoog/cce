{"version":3,"file":"loading.js","sourceRoot":"","sources":["../../src/loading.ts"],"names":[],"mappings":";;AAAA,6BAA+B;AAO/B,IAAM,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;AAE7D,SAAS,YAAY,CAAC,IAAY,EAAE,IAAY;IAC/C,IAAM,MAAM,GAAG,WAAW,CAAC,IAAI,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;IACtD,OAAO,UAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,cAAI,IAAI,qBAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAG,CAAC;AACrE,CAAC;AAED,SAAwB,YAAY,CAAC,IAAY;IAChD,IAAI,IAAI,GAAG,CAAC,CAAC;IAEb,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IAE/C,IAAM,QAAQ,GAAG,WAAW,CAAC;QAC5B,IAAI,IAAI,CAAC,CAAC;QACV,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAW,YAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAE,CAAC,CAAC;IAC7D,CAAC,EAAE,GAAG,CAAgC,CAAC;IAEvC,OAAO;QACN,IAAI;YACH,aAAa,CAAC,QAAQ,CAAC,CAAC;YACxB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAW,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI,IAAI,qBAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAK,CAAC,CAAC;QAC5F,CAAC;QACD,KAAK;YACJ,aAAa,CAAC,QAAQ,CAAC,CAAC;YACxB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,oBAAW,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,cAAI,IAAI,qBAAM,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAK,CAAC,CAAC;QAC1F,CAAC;KACD,CAAC;AACH,CAAC;AApBD,+BAoBC","sourcesContent":["import * as chalk from 'chalk';\n\nexport type Loader = {\n\tdone: () => void;\n\terror: () => void;\n};\n\nconst loaderIcons = ['▝', '▐', '▗', '▄', '▖', '▌', '▘', '▀'];\n\nfunction runningTimer(name: string, time: number): string {\n\tconst loader = loaderIcons[time % loaderIcons.length];\n\treturn `${chalk.gray(loader)} ${name} — ${(time / 10).toFixed(1)}s`;\n}\n\nexport default function startLoading(name: string): Loader {\n\tlet time = 0;\n\n\tprocess.stdout.write(runningTimer(name, time));\n\n\tconst interval = setInterval(() => {\n\t\ttime += 1;\n\t\tprocess.stdout.write(`\\r\\x1b[K${runningTimer(name, time)}`);\n\t}, 100 /* Updates timer every 0.1s */);\n\n\treturn {\n\t\tdone() {\n\t\t\tclearInterval(interval);\n\t\t\tprocess.stdout.write(`\\r\\x1b[K${chalk.green('✓')} ${name} — ${(time / 10).toFixed(1)}s\\n`);\n\t\t},\n\t\terror() {\n\t\t\tclearInterval(interval);\n\t\t\tprocess.stdout.write(`\\r\\x1b[K${chalk.red('✕')} ${name} — ${(time / 10).toFixed(1)}s\\n`);\n\t\t},\n\t};\n}\n"]}