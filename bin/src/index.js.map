{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\nimport * as chalk from 'chalk';\nimport { exec, execSync, spawn } from 'child_process';\nimport { Command } from 'commander';\nimport { existsSync, readFile, rmSync, stat, writeFile } from 'fs';\nimport path = require('path');\nimport startLoading from './loading';\nimport pjson = require('../package.json');\n\ntype Options = {\n\tcompiler?: string;\n\tcompilerArguments?: string;\n\texecuteArguments?: string;\n\toutfile?: string;\n\tsave?: true;\n\tasIs?: true;\n};\n\nconst mainMatch = /main[\\n\\t ]*?\\([^]*?\\)[\\n\\t ]*?\\{/;\nconst modifiedFile = '__cce_mod__.c';\n\n// Set up command line argumets and options\nconst program = new Command();\nprogram.name('cce').description(pjson.description).version(pjson.version, '-v, -V, --version');\nprogram\n\t.argument('<file>', 'file to compile and run')\n\t.option('-c, --compiler <compiler>', 'compiler to use, defaults to GCC')\n\t.option('-ca, --compiler-arguments <arguments>', 'arguments passed to the compiler')\n\t.option('-ea, --execute-arguments <arguments>', 'arguments passed to the executable result')\n\t.option('-o, --outfile <name>', 'name of compiled file, defaults to <file>__cce__.o')\n\t.option('-s, --save', 'saves the file after execution, otherwise it will be deleted')\n\t.option(\n\t\t'-ai, --as-is',\n\t\t'compiles the original file without modification, could result in unexpected behavior during execution phase'\n\t);\nprogram.parse();\nconst [file] = program.args;\nconst opts = program.opts<Options>();\n\n// Get options\n// TODO: Should be extended to use g++ for cpp files\nconst compiler = opts?.compiler || 'gcc';\nconst compilerArguments = opts?.compilerArguments || '';\nconst executeArguments = opts?.executeArguments || '';\nconst outfile = opts?.outfile || `${file}__cce__.o`;\nconst save = opts?.save || false;\nconst asIs = opts?.asIs || false;\n\n// Generate the path to the file\nconst filePath = path.join(process.cwd(), file);\n\n// Validate options\nvalidateOptions();\n\nfunction validateOptions() {\n\tconst validatingLoader = startLoading('Validating');\n\n\tlet warnings: string[] = [];\n\tif (compilerArguments.match(/(-o|--output)/))\n\t\twarnings.push(\n\t\t\t'--compiler-arguments contains an --output option, this could prevent CCE from executing the compiled file. Please use the CCE --outfile (-o) option instead'\n\t\t);\n\n\tif (!existsSync(filePath)) {\n\t\tvalidatingLoader.error();\n\t\tconsole.error(`error: file ${filePath} doesn't exist`);\n\t\tprocess.exit(1);\n\t}\n\n\tstat(filePath, (error, stats) => {\n\t\tif (error) {\n\t\t\tvalidatingLoader.error();\n\t\t\tconsole.error(`error: there was an issue retrieving information about the file ${filePath}`);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\tif (!stats.isFile()) {\n\t\t\tvalidatingLoader.error();\n\t\t\tconsole.error(`error: ${filePath} is not a file`);\n\t\t\tprocess.exit(1);\n\t\t}\n\n\t\t// Exists and is a file\n\t\texec(`which ${compiler}`, async (error) => {\n\t\t\tif (error) {\n\t\t\t\tvalidatingLoader.error();\n\t\t\t\tconsole.error(`error: compiler ${compiler} doesn't exist`);\n\t\t\t\tprocess.exit(1);\n\t\t\t}\n\n\t\t\tvalidatingLoader.done();\n\t\t\twarnings.forEach((w) => console.log(`${chalk.hex('#a2e')('Warning:')} ${w}`));\n\t\t\t// Compile the code\n\t\t\tcompile();\n\t\t});\n\t});\n}\n\nfunction compile() {\n\tconst compileLoader = startLoading('Compiling');\n\n\tif (asIs) {\n\t\texec(\n\t\t\t`${compiler} ${file}${compilerArguments && ` ${compilerArguments}`} -o ${outfile}`,\n\t\t\t(error, stdout, stderr) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tcompileLoader.error();\n\t\t\t\t\tconsole.error(stderr);\n\t\t\t\t\tprocess.exit(1);\n\t\t\t\t}\n\n\t\t\t\tif (!existsSync(path.join(process.cwd(), outfile))) {\n\t\t\t\t\tcompileLoader.error();\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t`error: Compiled file not found where expected, likely caused by compiler ${compiler} not handeling -o in an expected way.` +\n\t\t\t\t\t\t\t'\\nA possible workaround is to provide the --compiler-arguments and --outfile option with the same filename'\n\t\t\t\t\t);\n\t\t\t\t\tprocess.exit(1);\n\t\t\t\t}\n\n\t\t\t\tcompileLoader.done();\n\t\t\t\tconsole.log(stdout);\n\n\t\t\t\t// Execute the compiled code\n\t\t\t\texecute();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tgenerateModFile(() => {\n\t\t\texec(\n\t\t\t\t`${compiler} ${modifiedFile}${compilerArguments && ` ${compilerArguments}`} -o ${outfile}`,\n\t\t\t\t(error, stdout, stderr) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tcompileLoader.error();\n\t\t\t\t\t\tconsole.log();\n\t\t\t\t\t\tconsole.error(hideMod(stderr));\n\t\t\t\t\t\trmSync(`${process.cwd()}/${modifiedFile}`);\n\t\t\t\t\t\tprocess.exit(1);\n\t\t\t\t\t}\n\t\t\t\t\trmSync(`${process.cwd()}/${modifiedFile}`);\n\n\t\t\t\t\tif (!existsSync(path.join(process.cwd(), outfile))) {\n\t\t\t\t\t\tcompileLoader.error();\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t`error: Compiled file not found where expected, likely caused by compiler ${compiler} not handeling -o in an expected way.` +\n\t\t\t\t\t\t\t\t'\\nA possible workaround is to provide the --compiler-arguments and --outfile option with the same filename'\n\t\t\t\t\t\t);\n\t\t\t\t\t\tprocess.exit(1);\n\t\t\t\t\t}\n\n\t\t\t\t\tcompileLoader.done();\n\t\t\t\t\tconsole.log();\n\t\t\t\t\tif (stderr || stdout) console.log(chalk.bold('Compiler says:'));\n\t\t\t\t\tif (stderr) console.log(hideMod(stderr));\n\t\t\t\t\tif (stdout) console.log(hideMod(stdout));\n\n\t\t\t\t\t// Execute the compiled code\n\t\t\t\t\texecute();\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n}\n\nfunction generateModFile(callback: () => any): void {\n\treadFile(file, (error, data) => {\n\t\tif (error) {\n\t\t\tconsole.error(error);\n\t\t\tprocess.exit(1);\n\t\t}\n\t\tconst original = data.toString();\n\t\tconst match = mainMatch.exec(original);\n\t\twriteFile(\n\t\t\t`${process.cwd()}/${modifiedFile}`,\n\t\t\toriginal.slice(0, match.index + match[0].length) +\n\t\t\t\t'\\nsetvbuf(stdout, NULL, _IONBF, 0);' +\n\t\t\t\toriginal.slice(match.index + match[0].length),\n\t\t\t(error) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t\tprocess.exit(1);\n\t\t\t\t}\n\n\t\t\t\tcallback();\n\t\t\t}\n\t\t);\n\t});\n}\n\nfunction hideMod(text: string): string {\n\treturn (\n\t\ttext.replace(new RegExp(modifiedFile, 'g'), file) +\n\t\t`\\n${chalk\n\t\t\t.hex('#e83')\n\t\t\t.bold(\n\t\t\t\t'Note:'\n\t\t\t)} Row numbers can be of by one. Run with flag -ai to get exact values from compilation errors and warnings`\n\t);\n}\n\nfunction execute() {\n\texecSync(`chmod +x ${outfile}`); // in case file isn't automatically made executable\n\tconst child = spawn(\n\t\t`./${outfile}`,\n\t\texecuteArguments\n\t\t\t? executeArguments.split(' ') /* TODO: Shouldn't split parts in qoutation marks */\n\t\t\t: undefined\n\t);\n\n\tchild.stdout.setEncoding('utf8');\n\tchild.stdout.pipe(process.stdout);\n\tprocess.stdin.on('data', (data) => {\n\t\tchild.stdin.write(data);\n\t});\n\n\tchild.on('error', (err) => {\n\t\tconsole.log('Process Error');\n\t\tconsole.log(err);\n\t\tif (!save) rmSync(outfile);\n\t\tprocess.exit(1);\n\t});\n\n\tchild.on('exit', (code) => {\n\t\tconsole.error(`Process exited with code ${code}`);\n\t\tif (!save) rmSync(outfile);\n\t\tprocess.exit(0);\n\t});\n}\n\nprocess.on('SIGINT', () => {\n\tconsole.log('\\nPerforming cleanup...');\n\tif (existsSync(`${process.cwd()}/${modifiedFile}`)) rmSync(`${process.cwd()}/${modifiedFile}`);\n\tif (existsSync(`${process.cwd()}/${outfile}`)) rmSync(`${process.cwd()}/${outfile}`);\n\tconsole.log('Cleanup complete');\n\tprocess.exit(0);\n});\n"]}